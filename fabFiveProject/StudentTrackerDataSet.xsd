<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="StudentTrackerDataSet" targetNamespace="http://tempuri.org/StudentTrackerDataSet.xsd" xmlns:mstns="http://tempuri.org/StudentTrackerDataSet.xsd" xmlns="http://tempuri.org/StudentTrackerDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="StudentTrackerConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="StudentTrackerConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.fabFiveProject.Properties.Settings.GlobalReference.Default.StudentTrackerConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="courseTableAdapter" GeneratorDataComponentClassName="courseTableAdapter" Name="course" UserDataComponentName="courseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentTrackerConnectionString (Settings)" DbObjectName="StudentTracker.dbo.course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[course] WHERE (([courseId] = @Original_courseId) AND ([courseTitle] = @Original_courseTitle))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_courseTitle" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseTitle" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[course] ([courseTitle]) VALUES (@courseTitle);
SELECT courseId, courseTitle FROM course WHERE (courseId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@courseTitle" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseTitle" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT courseId, courseTitle FROM dbo.course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[course] SET [courseTitle] = @courseTitle WHERE (([courseId] = @Original_courseId) AND ([courseTitle] = @Original_courseTitle));
SELECT courseId, courseTitle FROM course WHERE (courseId = @courseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@courseTitle" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseTitle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_courseTitle" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseTitle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="courseId" ColumnName="courseId" DataSourceName="StudentTracker.dbo.course" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="courseId" DataSetColumn="courseId" />
              <Mapping SourceColumn="courseTitle" DataSetColumn="courseTitle" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="semesters_offeredTableAdapter" GeneratorDataComponentClassName="semesters_offeredTableAdapter" Name="semesters_offered" UserDataComponentName="semesters_offeredTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentTrackerConnectionString (Settings)" DbObjectName="StudentTracker.dbo.semesters_offered" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[semesters_offered] ([courseId], [semester]) VALUES (@courseId, @semester)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@semester" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT courseId, semester FROM dbo.semesters_offered</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="courseId" DataSetColumn="courseId" />
              <Mapping SourceColumn="semester" DataSetColumn="semester" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentTableAdapter" GeneratorDataComponentClassName="studentTableAdapter" Name="student" UserDataComponentName="studentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentTrackerConnectionString (Settings)" DbObjectName="StudentTracker.dbo.student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[student] WHERE (([studentId] = @Original_studentId) AND ([studentName] = @Original_studentName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[student] ([studentName]) VALUES (@studentName);
SELECT studentId, studentName FROM student WHERE (studentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT studentId, studentName FROM dbo.student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[student] SET [studentName] = @studentName WHERE (([studentId] = @Original_studentId) AND ([studentName] = @Original_studentName));
SELECT studentId, studentName FROM student WHERE (studentId = @studentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="studentId" ColumnName="studentId" DataSourceName="StudentTracker.dbo.student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@studentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="studentId" DataSetColumn="studentId" />
              <Mapping SourceColumn="studentName" DataSetColumn="studentName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="student_courses_completeTableAdapter" GeneratorDataComponentClassName="student_courses_completeTableAdapter" Name="student_courses_complete" UserDataComponentName="student_courses_completeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentTrackerConnectionString (Settings)" DbObjectName="StudentTracker.dbo.student_courses_complete" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[student_courses_complete] ([courseId], [studentId]) VALUES (@courseId, @studentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT courseId, studentId FROM dbo.student_courses_complete</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="courseId" DataSetColumn="courseId" />
              <Mapping SourceColumn="studentId" DataSetColumn="studentId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="StudentTrackerDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="StudentTrackerDataSet" msprop:Generator_UserDSName="StudentTrackerDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="course" msprop:Generator_TableClassName="courseDataTable" msprop:Generator_TableVarName="tablecourse" msprop:Generator_TablePropName="course" msprop:Generator_RowDeletingName="courseRowDeleting" msprop:Generator_RowChangingName="courseRowChanging" msprop:Generator_RowEvHandlerName="courseRowChangeEventHandler" msprop:Generator_RowDeletedName="courseRowDeleted" msprop:Generator_UserTableName="course" msprop:Generator_RowChangedName="courseRowChanged" msprop:Generator_RowEvArgName="courseRowChangeEvent" msprop:Generator_RowClassName="courseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="courseId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columncourseId" msprop:Generator_ColumnPropNameInRow="courseId" msprop:Generator_ColumnPropNameInTable="courseIdColumn" msprop:Generator_UserColumnName="courseId" type="xs:int" />
              <xs:element name="courseTitle" msprop:Generator_ColumnVarNameInTable="columncourseTitle" msprop:Generator_ColumnPropNameInRow="courseTitle" msprop:Generator_ColumnPropNameInTable="courseTitleColumn" msprop:Generator_UserColumnName="courseTitle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="semesters_offered" msprop:Generator_TableClassName="semesters_offeredDataTable" msprop:Generator_TableVarName="tablesemesters_offered" msprop:Generator_TablePropName="semesters_offered" msprop:Generator_RowDeletingName="semesters_offeredRowDeleting" msprop:Generator_RowChangingName="semesters_offeredRowChanging" msprop:Generator_RowEvHandlerName="semesters_offeredRowChangeEventHandler" msprop:Generator_RowDeletedName="semesters_offeredRowDeleted" msprop:Generator_UserTableName="semesters_offered" msprop:Generator_RowChangedName="semesters_offeredRowChanged" msprop:Generator_RowEvArgName="semesters_offeredRowChangeEvent" msprop:Generator_RowClassName="semesters_offeredRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="courseId" msprop:Generator_ColumnVarNameInTable="columncourseId" msprop:Generator_ColumnPropNameInRow="courseId" msprop:Generator_ColumnPropNameInTable="courseIdColumn" msprop:Generator_UserColumnName="courseId" type="xs:int" />
              <xs:element name="semester" msprop:Generator_ColumnVarNameInTable="columnsemester" msprop:Generator_ColumnPropNameInRow="semester" msprop:Generator_ColumnPropNameInTable="semesterColumn" msprop:Generator_UserColumnName="semester">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="student" msprop:Generator_TableClassName="studentDataTable" msprop:Generator_TableVarName="tablestudent" msprop:Generator_TablePropName="student" msprop:Generator_RowDeletingName="studentRowDeleting" msprop:Generator_RowChangingName="studentRowChanging" msprop:Generator_RowEvHandlerName="studentRowChangeEventHandler" msprop:Generator_RowDeletedName="studentRowDeleted" msprop:Generator_UserTableName="student" msprop:Generator_RowChangedName="studentRowChanged" msprop:Generator_RowEvArgName="studentRowChangeEvent" msprop:Generator_RowClassName="studentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="studentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnstudentId" msprop:Generator_ColumnPropNameInRow="studentId" msprop:Generator_ColumnPropNameInTable="studentIdColumn" msprop:Generator_UserColumnName="studentId" type="xs:int" />
              <xs:element name="studentName" msprop:Generator_ColumnVarNameInTable="columnstudentName" msprop:Generator_ColumnPropNameInRow="studentName" msprop:Generator_ColumnPropNameInTable="studentNameColumn" msprop:Generator_UserColumnName="studentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="student_courses_complete" msprop:Generator_TableClassName="student_courses_completeDataTable" msprop:Generator_TableVarName="tablestudent_courses_complete" msprop:Generator_TablePropName="student_courses_complete" msprop:Generator_RowDeletingName="student_courses_completeRowDeleting" msprop:Generator_RowChangingName="student_courses_completeRowChanging" msprop:Generator_RowEvHandlerName="student_courses_completeRowChangeEventHandler" msprop:Generator_RowDeletedName="student_courses_completeRowDeleted" msprop:Generator_UserTableName="student_courses_complete" msprop:Generator_RowChangedName="student_courses_completeRowChanged" msprop:Generator_RowEvArgName="student_courses_completeRowChangeEvent" msprop:Generator_RowClassName="student_courses_completeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="courseId" msprop:Generator_ColumnVarNameInTable="columncourseId" msprop:Generator_ColumnPropNameInRow="courseId" msprop:Generator_ColumnPropNameInTable="courseIdColumn" msprop:Generator_UserColumnName="courseId" type="xs:int" />
              <xs:element name="studentId" msprop:Generator_ColumnVarNameInTable="columnstudentId" msprop:Generator_ColumnPropNameInRow="studentId" msprop:Generator_ColumnPropNameInTable="studentIdColumn" msprop:Generator_UserColumnName="studentId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:course" />
      <xs:field xpath="mstns:courseId" />
    </xs:unique>
    <xs:unique name="student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:student" />
      <xs:field xpath="mstns:studentId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_course_sem" msdata:parent="course" msdata:child="semesters_offered" msdata:parentkey="courseId" msdata:childkey="courseId" msprop:Generator_UserChildTable="semesters_offered" msprop:Generator_ChildPropName="Getsemesters_offeredRows" msprop:Generator_UserRelationName="fk_course_sem" msprop:Generator_ParentPropName="courseRow" msprop:Generator_RelationVarName="relationfk_course_sem" msprop:Generator_UserParentTable="course" />
      <msdata:Relationship name="fk_course_comp" msdata:parent="course" msdata:child="student_courses_complete" msdata:parentkey="courseId" msdata:childkey="courseId" msprop:Generator_UserChildTable="student_courses_complete" msprop:Generator_ChildPropName="Getstudent_courses_completeRows" msprop:Generator_UserRelationName="fk_course_comp" msprop:Generator_ParentPropName="courseRow" msprop:Generator_RelationVarName="relationfk_course_comp" msprop:Generator_UserParentTable="course" />
      <msdata:Relationship name="fk_student_comp" msdata:parent="student" msdata:child="student_courses_complete" msdata:parentkey="studentId" msdata:childkey="studentId" msprop:Generator_UserChildTable="student_courses_complete" msprop:Generator_ChildPropName="Getstudent_courses_completeRows" msprop:Generator_UserRelationName="fk_student_comp" msprop:Generator_ParentPropName="studentRow" msprop:Generator_RelationVarName="relationfk_student_comp" msprop:Generator_UserParentTable="student" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>